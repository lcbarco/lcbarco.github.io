I"∫<p>Hace tiempo comenc√© un proyecto en <a href="https://grails.org/">Grails 4</a>. En un momento del proyecto se hizo necesario ejecutar Jobs programados a ciertas horas. Para ello <strong>Grails 4</strong> tienen implementados los Job Services. Usando la gu√≠a <a href="https://guides.grails.org/grails-scheduled/guide/index.html">Grails + @Scheduled</a> realizamos la primera versi√≥n.</p>

<p><img src="https://grails.org/images/grails_logo.svg" alt="Log de Grails" /></p>

<p>No tard√© en darme cuenta que si varios Jobs se ten√≠an que ejecutar a la vez, no se ejecutaban de forma concurrente sino secuencial.</p>

<!--more-->

<h2 id="todos-es-culpa-de-los-threads">Todos es culpa de los Threads</h2>
<p>El motivo de este comportamientos es que los Job Services usan un <strong>ThreadPoolTaskScheduler</strong> que por defecto se instancia con un solo <strong>Thread</strong>.</p>

<p>Si se revisa la <a href="https://guides.grails.org/grails-scheduled/guide/index.html">documentaci√≥n</a> podemos leer el siguiente p√°rrafo en el que se indica esta circunstancia:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>By default ThreadPoolTaskScheduler only has a single thread available for execution, which means tasks will not execute concurrently
</code></pre></div></div>

<h2 id="configurar-nuestro-propio-threadpooltaskscheduler">Configurar nuestro propio ThreadPoolTaskScheduler</h2>
<p>La soluci√≥n es configurar nuestro propio <strong>ThreadPoolTaskScheduler</strong> con m√°s Threads.</p>

<p>Para ello creamos el archivo <em>src/main/groovy/jobs/SchedulingConfiguration.groovy</em> con el siguiente c√≥digo:</p>
<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.mycompany.jobs</span>

<span class="kn">import</span> <span class="nn">groovy.transform.CompileStatic</span>
<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span>
<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Configuration</span>
<span class="kn">import</span> <span class="nn">org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler</span>

<span class="nd">@CompileStatic</span>
<span class="nd">@Configuration</span>
<span class="kd">class</span> <span class="nc">SchedulingConfiguration</span> <span class="o">{</span>

    <span class="nd">@Bean</span>
    <span class="n">ThreadPoolTaskScheduler</span> <span class="nf">threadPoolTaskScheduler</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">ThreadPoolTaskScheduler</span> <span class="n">threadPoolTaskScheduler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ThreadPoolTaskScheduler</span><span class="o">()</span>
        <span class="n">threadPoolTaskScheduler</span><span class="o">.</span><span class="na">setThreadNamePrefix</span><span class="o">(</span><span class="s2">"ThreadPoolTaskScheduler"</span><span class="o">)</span>
        <span class="n">threadPoolTaskScheduler</span><span class="o">.</span><span class="na">setPoolSize</span><span class="o">(</span><span class="mi">5</span><span class="o">)</span>
        <span class="n">threadPoolTaskScheduler</span><span class="o">.</span><span class="na">initialize</span><span class="o">()</span>
        <span class="n">threadPoolTaskScheduler</span>
    <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<p>Donde <em>setPoolSize(5)</em> es el n√∫mero de Thread que queremos usar.</p>

<h2 id="conclusiones">Conclusiones</h2>
<p>Una vez m√°s se cumple la expresi√≥n RTFM (Read The Fucking Manual). Prueba a crear el configurar tu ThreadPoolTaskScheduler y cont√°ctame si tienes alg√∫n problema envi√°ndome un email a <a href="mailto:lcbarco@gmail.com">lcbarco@gmail.com</a> o a trav√©s de mi cuenta de Twitter <a href="https://twitter.com/lcbarco">https://twitter.com/lcbarco</a>.</p>

:ET